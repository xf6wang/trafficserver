'''
Tools to help with TestRun commands
'''
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# allows the same command to be repeatedly run in parallel.
#
# example usage:
# curlcmd = 'curl -vs -k https:127.0.0.1:{port}'.format(port = ts.Variables.port)
#
# tr = Test.AddTestRun()
# tr.Processes.Default.Command = 'sleep 5'
# tr.Processes.Default.ReturnCode = 0
# tr.Processes.Default.StartAfter(
#   *Test.ParallelizeCommand(tr, numberOfRequests, curlcmd)
#   )

def parallel_command(self, tr, num, cmd):
    ret=[]

    for cnt in range(0,num):
        ret.append(
            tr.Processes.Process(
                name="cmdline-{num}".format(num=cnt),
                cmdstr=cmd,
                returncode = 0
                )
            )
    return ret

ExtendTest(parallel_command, name="ParallelizeCommand")
